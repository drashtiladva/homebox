name: Lint, Test, Build and Push Docker Image

on:
  pull_request:
    branches: main
  push:
    branches: main

jobs:
  job_backend:
    name: Backend Phase (Lint & Test)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Initialize Go module
        run: go mod tidy

      - name: Lint Go code
        run: go vet ./...

      - name: Run Go tests
        run: go test ./...

  job_frontend:
    name: Frontend Phase (Build Backend, Start API & Run Frontend Tests)
    runs-on: ubuntu-latest
    needs: job_backend
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build backend API
        run: |
          cd ../backend/app/api
          go build -o homebox

      - name: Start backend server
        run: |
          cd ../backend/app/api
          ./homebox &
          sleep 5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Lint frontend
        run: pnpm run lint:ci

      - name: Typecheck frontend
        run: pnpm run typecheck

      - name: Run frontend integration tests
        run: pnpm test:ci

  job_docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [job_backend, job_frontend]
    if: ${{ success() }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: drashti114/homebox
          tags: |
            type=ref,event=branch
            type=sha

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
